setwd("~/Desktop/Git/thesis-sample")
library(dplyr)
library(tidyverse)
library(stringr)
library(purrr)
library(grid)
library(gridExtra)
library(scales)
library(multcomp)
library(RColorBrewer)
library(scales)
library(ggpubr)
#install.packages("devtools")
#library(devtools)
#install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
#install.packages("remotes")
#remotes::install_github("timriffe/DemoTools")
#install.packages("DemoTools")
library(DemoTools)
source("~/Desktop/Git/thesis-sample/le_lv_analysis.R", echo=TRUE)
results_baseline
results_baseline %>%
mutate(le_ci=paste0(le=format(le, digits=1, nsmall=1),
" (",
format(lci, digits=1, nsmall=1),
", ",
format(uci, digits=1, nsmall=1),
")")) %>% # LE (95% CI) column
select(race, metro2, le_ci) %>%
spread(metro2, le_ci) %>%
rename(metro_le_ci=`Metropolitan`,
nonmetro_le_ci=`Non-metro`) %>%
full_join(
results_baseline %>% select(race, metro2, le) %>%
spread(metro2, le) %>%
rename(metro_le=`Metropolitan`,
nonmetro_le=`Non-metro`) %>%
full_join(
results_baseline %>% select(race, metro2, lv) %>%
spread(metro2, lv) %>%
rename(metro_lv=`Metropolitan`,
nonmetro_lv=`Non-metro`)) %>%
mutate(abs_le=metro_le-nonmetro_le,
rel_le=metro_le/nonmetro_le,
abs_lv=metro_lv-nonmetro_lv,
rel_lv=metro_lv/nonmetro_lv)) %>%
ungroup() %>%
transmute(race,
metro_le_ci,
nonmetro_le_ci,
abs_le=as.numeric(format(abs_le, digits=2, nsmall=2)),
rel_le=as.numeric(format(rel_le, digits=2, nsmall=2)),
metro_lv=as.numeric(format(metro_lv, digits=1, nsmall=1)),
nonmetro_lv=as.numeric(format(nonmetro_lv, digits=1, nsmall=1)),
abs_lv=as.numeric(format(abs_lv, digits=2, nsmall=2)),
rel_lv=as.numeric(format(rel_lv, digits=2, nsmall=2)))
df %>% select(year5, race, metro_lv) %>%
spread(year5, metro_lv) %>%
rename(metro_2000_2004=`2000-2004`,
metro_2005_2009=`2005-2009`,
metro_2010_2014=`2010-2014`,
metro_2015_2019=`2015-2019`) %>%
full_join(
df %>% select(year5, race, nonmetro_lv) %>%
spread(year5, nonmetro_lv) %>%
rename(nonmetro_2000_2004=`2000-2004`,
nonmetro_2005_2009=`2005-2009`,
nonmetro_2010_2014=`2010-2014`,
nonmetro_2015_2019=`2015-2019`))
ggplot(df, aes(year5, le, group=race)) +
geom_point(aes(color=race), size=3) +
geom_line(aes(color=race))+
facet_wrap(~metro2)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Year",
y="Life Expectancy",
color="", fill="")+
isabel_theme+
theme(legend.position="bottom", legend.title=element_blank())
####### figure 1: A1_lelv_longtrends #######
df <- results_longitudinal %>% mutate(year5=substr(year5, 1, 4))
df <- df %>% mutate(year5=factor(year5,
levels=c(2000, 2005, 2010, 2015),
labels=c("2000-2004",
"2005-2009",
"2010-2014",
"2015-2019")))
ggplot(df, aes(year5, le, group=race)) +
geom_point(aes(color=race), size=3) +
geom_line(aes(color=race))+
facet_wrap(~metro2)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Year",
y="Life Expectancy",
color="", fill="")+
isabel_theme+
theme(legend.position="bottom", legend.title=element_blank())
ggplot(df, aes(year5, lv, group=race)) +
geom_point(aes(color=race), size=3) +
geom_line(aes(color=race))+
facet_wrap(~metro2)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Year",
y="Lifespan Variation",
color="", fill="")+
isabel_theme+
theme(legend.position="bottom", legend.title=element_blank())
ggarrange(le_longtrend, lv_longtrend, nrow=2,
common.legend = TRUE,
legend="bottom")
####### figure 2: A1_le_vs_lv #######
# association b/w LE and LV by race/ethnicity, 2000-2019
df <- results_longitudinal %>% mutate(year5=substr(year5, 1, 4)) %>%
select(year5, race, metro2, le, lv) %>%
arrange(race, metro2, year5)
ggplot(df, aes(lv, le, group=race)) +
geom_point(aes(color=race), size=3) +
geom_path(aes(color=race))+
geom_text(aes(label=year5), vjust=-1) +
facet_wrap(~metro2)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Lifespan Variation",
y="Life Expectancy",
color="", fill="")+
isabel_theme+
theme(legend.position="bottom", legend.title=element_blank())
######## figure 3: A2_le_bars ########
# le by race/urbanicity and sex
df <- results_baseline %>% ungroup() %>%
select(race, metro2, le) %>%
full_join(results_gender, by=c("race", "metro2")) %>%
transmute(race, metro2, total_sex=`le.x`, sex, le.y) %>%
spread(sex, `le.y`) %>%
rename(male_le=`Male`,
female_le=`Female`) %>%
gather("sex", "le", 3:5) %>%
mutate(sex=case_when(
sex=="total_sex" ~ 0,
sex=="male_le" ~ 1,
sex=="female_le" ~ 2,
)) %>%
mutate(sex=factor(sex, levels=c(0,1,2), labels=c("Total", "Male", "Female"))) %>%
arrange(race)
ggplot(df, aes(x=race, y=le, fill=as.factor(sex))) +
geom_col(position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-1) +
scale_y_continuous(limits=c(df %>% ungroup() %>% select(le) %>% min,
df %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Race/Ethnicity",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~metro2)+
isabel_theme
######## table 4: A2_lelv_table ########
# le/lv by sex and race/urbanicity
df <- results_gender %>%
mutate(le_ci=paste0(le=format(le, digits=1, nsmall=1),
" (",
format(lci, digits=1, nsmall=1),
", ",
format(uci, digits=1, nsmall=1),
")")) %>% # LE (95% CI) column
select(race, metro2, le_ci) %>%
spread(metro2, le_ci) %>%
rename(metro_le_ci=`Metropolitan`,
nonmetro_le_ci=`Non-metro`) %>%
full_join(
results_gender %>% select(race, metro2, sex, lv) %>%
spread(metro2, lv) %>%
rename(metro_lv=`Metropolitan`,
nonmetro_lv=`Non-metro`))
df %>% select(race, sex, metro_le_ci) %>%
spread(sex, metro_le_ci) %>%
rename(metro_male_le=`Male`,
metro_female_le=`Female`) %>%
full_join(
df %>% select(race, sex, nonmetro_le_ci) %>%
spread(sex, nonmetro_le_ci) %>%
rename(nonmetro_male_le=`Male`,
nonmetro_female_le=`Female`)) %>%
full_join(
df %>% transmute(race, sex, metro_lv=as.numeric(format(metro_lv, digits=1, nsmall=1))) %>%
spread(sex, metro_lv) %>%
rename(metro_male_lv=`Male`,
metro_female_lv=`Female`)) %>%
full_join(
df %>% transmute(race, sex, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=1, nsmall=1))) %>%
spread(sex, nonmetro_lv) %>%
rename(nonmetro_male_lv=`Male`,
nonmetro_female_lv=`Female`))
