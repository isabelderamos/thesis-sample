format(uci, digits=1, nsmall=1),
")")) %>% # LE (95% CI) column
select(race, metro6, le_ci) %>%
spread(metro6, le_ci)
A3_le_table
A3_lv_table <- results_urbanicity %>% transmute(race, metro6, lv=as.numeric(format(lv, digits=1, nsmall=1))) %>%
spread(metro6, lv)
View(A3_lv_table)
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
#guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="none", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
#guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="none")+
facet_wrap(~race, nrow=1)+
#guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
guides(scale="none")+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
######## table 7:  A3_le_bars ########
# one panel per race, one bar per metro category
A3_le_bars <-
ggplot(results_urbanicity, aes(x=metro6, y=le)) +
geom_col(aes(fill=metro6), color="black", position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.5) +
scale_y_continuous(limits=c(results_urbanicity %>% ungroup() %>% select(le) %>% min,
results_urbanicity %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_x_discrete(labels=function(results_urbanicity) str_wrap(results_urbanicity, width = 10))+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Levels of Urbanization",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~race, nrow=1)+
guides(fill=F)+
isabel_theme +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))
df <- results_geography %>%
mutate(le_ci=paste0(le=format(le, digits=1, nsmall=1),
" (",
format(lci, digits=1, nsmall=1),
", ",
format(uci, digits=1, nsmall=1),
")")) %>% # LE (95% CI) column
select(race, metro2, le_ci) %>%
spread(metro2, le_ci) %>%
rename(metro_le_ci=`Metropolitan`,
nonmetro_le_ci=`Non-metro`) %>%
full_join(
results_geography %>% select(race, metro2, lv) %>%
spread(metro2, lv) %>%
rename(metro_lv=`Metropolitan`,
nonmetro_lv=`Non-metro`))
############ ANALYSIS 4 GEOGRAPHY: 2015-2019, GENDER POOLED, 4 CENSUS REGIONS, 2 METRO CATEGORIES  ######
results_geography <- dta %>% filter(year5=='2015-2019') %>%
group_by(age_5yr_group, metro2, race, census_region) %>%
summarise(count=sum(count, na.rm=T),
pop_denom=sum(pop_denom, na.rm=T)) %>%
ungroup() %>%
# creating age-specific death rates variable, Mx
mutate(mx=count/pop_denom,
age_5yr_group=as.numeric(age_5yr_group)) %>%
arrange(metro2, race, census_region, age_5yr_group) %>%
group_by(race, metro2, census_region) %>%
# group_modify generates a data frame of outputs
group_modify(~le_lv(.))
######## table 7:  A4_le_table ########
# le by race/urbanicity and census region
df <- results_geography %>%
mutate(le_ci=paste0(le=format(le, digits=1, nsmall=1),
" (",
format(lci, digits=1, nsmall=1),
", ",
format(uci, digits=1, nsmall=1),
")")) %>% # LE (95% CI) column
select(race, metro2, le_ci) %>%
spread(metro2, le_ci) %>%
rename(metro_le_ci=`Metropolitan`,
nonmetro_le_ci=`Non-metro`) %>%
full_join(
results_geography %>% select(race, metro2, lv) %>%
spread(metro2, lv) %>%
rename(metro_lv=`Metropolitan`,
nonmetro_lv=`Non-metro`))
df %>% select(census_region, race, metro_le_ci) %>%
spread(census_region, metro_le_ci) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`) %>%
full_join(
df %>% select(census_region, race, nonmetro_le_ci) %>%
spread(census_region, nonmetro_le_ci) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
A4_le_table <- df %>% select(census_region, race, metro_le_ci) %>%
spread(census_region, metro_le_ci) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`) %>%
full_join(
df %>% select(census_region, race, nonmetro_le_ci) %>%
spread(census_region, nonmetro_le_ci) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
A4_lv_table <- df %>% transmute(census_region, race, metro_lv=as.numeric(format(metro_lv, digits=2, nsmall=2))) %>%
spread(census_region, metro_lv) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`) %>%
full_join(
df %>% select(census_region, race, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=2, nsmall=2)))) %>%
spread(census_region, nonmetro_lv) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
######## table 8:  A4_lv_tablee ########
# lv by race/urbanicity and census region
A4_lv_table <- df %>% transmute(census_region, race, metro_lv=as.numeric(format(metro_lv, digits=2, nsmall=2))) %>%
spread(census_region, metro_lv) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`) %>%
full_join(
df %>% select(census_region, race, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=2, nsmall=2))) %>%
spread(census_region, nonmetro_lv) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
df %>% transmute(census_region, race, metro_lv=as.numeric(format(metro_lv, digits=2, nsmall=2))) %>%
spread(census_region, metro_lv) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`)
df
df %>% select(census_region, race, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=2, nsmall=2))) %>%
spread(census_region, nonmetro_lv) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
df %>% select(census_region, race, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=2, nsmall=2)))
######## table 8:  A4_lv_tablee ########
# lv by race/urbanicity and census region
A4_lv_table <- df %>% transmute(census_region, race, metro_lv=as.numeric(format(metro_lv, digits=2, nsmall=2))) %>%
spread(census_region, metro_lv) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`) %>%
full_join(
df %>% transmute(census_region, race, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=2, nsmall=2))) %>%
spread(census_region, nonmetro_lv) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
View(A4_lv_table)
######## table 8:  A4_lv_tablee ########
# lv by race/urbanicity and census region
A4_lv_table <- df %>% transmute(census_region, race, metro_lv=as.numeric(format(metro_lv, digits=1, nsmall=1))) %>%
spread(census_region, metro_lv) %>%
rename(NE_metro=`Northeast`,
MW_metro=`Midwest`,
S_metro=`South`,
W_metro=`West`) %>%
full_join(
df %>% transmute(census_region, race, nonmetro_lv=as.numeric(format(nonmetro_lv, digits=1, nsmall=1))) %>%
spread(census_region, nonmetro_lv) %>%
rename(NE_nonmetro=`Northeast`,
MW_nonmetro=`Midwest`,
S_nonmetro=`South`,
W_nonmetro=`West`)) %>%
select(NE_metro, NE_nonmetro,
MW_metro, MW_nonmetro,
S_metro, S_nonmetro,
W_metro, W_nonmetro)
View(A4_lv_table)
View(A4_lv_table)
ggplot(results_geography, aes(x=census_region, y=le, fill=as.factor(race))) +
geom_col(position=position_dodge(width=0.8), width=0.8) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.8), vjust=-1) +
scale_y_continuous(limits=c(results_geography %>% ungroup() %>% select(le) %>% min,
results_geography %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Census Region",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~metro2)+
isabel_theme
######## figure 6:  A4_le_bars1 ########
A4_le_bars1 <- ggplot(results_geography, aes(x=census_region, y=le, fill=as.factor(race))) +
geom_col(position=position_dodge(width=0.8), width=0.8) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.8), vjust=-1) +
scale_y_continuous(limits=c(results_geography %>% ungroup() %>% select(le) %>% min,
results_geography %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Census Region",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~metro2)+
isabel_theme
######## figure 7:  A4_le_bars2 ########
A4_le_bars2 <- ggplot(results_geography, aes(x=race, y=le, fill=as.factor(metro2))) +
geom_col(position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.6) +
scale_y_continuous(limits=c(results_geography %>% ungroup() %>% select(le) %>% min,
results_geography %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Race/Ethnicity",
y="Life Expectancy",
color="", fill="") +
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~census_region, scales="free")+
isabel_theme
A4_le_bars2
######## figure 8:  A4_le_bars3 ########
A4_le_bars3 <- ggplot(results_geography, aes(x=metro2, y=le, fill=as.factor(race))) +
geom_col(position=position_dodge(width=0.7), width=0.7) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.7), vjust=-0.6) +
scale_y_continuous(limits=c(results_geography %>% ungroup() %>% select(le) %>% min,
results_geography %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Metropolitan/Non-metropolitan",
y="Life Expectancy",
color="", fill="") +
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~census_region, scales="free")+
isabel_theme
A4_le_bars3
A4_le_bars4 <- ggplot(results_geography, aes(x=race, y=le, fill=as.factor(census_region))) +
geom_col(position=position_dodge(width=0.8), width=0.8) +
geom_text(aes(label=format(le, digits=1, nsmall=1)), position=position_dodge(width=0.8), vjust=-1) +
scale_y_continuous(limits=c(results_geography %>% ungroup() %>% select(le) %>% min,
results_geography %>% ungroup() %>% select(le) %>% max),
oob=rescale_none)+
scale_fill_manual(values=cols)+
scale_color_manual(values=cols)+
labs(x="Census Region",
y="Life Expectancy",
color="", fill="")+
theme(legend.position="bottom", legend.title=element_blank())+
facet_wrap(~metro2)+
isabel_theme
A4_le_bars4
#~~~~ (1) get mortality .csv files ~~~~#
### Get mortality file names
mort_file_list <- list.files(pattern = "../Clean/mort[1|2]", full.names = TRUE)
setwd("~/Desktop/Git/thesis-sample")
list.files(pattern = "../Clean/mort[1|2]", full.names = TRUE)
list.files(pattern = "../Clean/Raw/mort[1|2]", full.names = TRUE)
list.files(pattern = "../Raw/mort[1|2]", full.names = TRUE)
list.files(pattern = "mort[1|2]", full.names = TRUE)
setwd("~/Desktop/Git/thesis-sample/Clean")
list.files(pattern = "mort[1|2]", full.names = TRUE)
setwd("~/Desktop/Git/thesis-sample")
list.files(pattern = "./Clean/mort[1|2]", full.names = TRUE)
list.files(pattern = '../Clean/mort[1|2]', full.names = TRUE)
tmp <- read.csv("../Data/bridged_pop_county_asrhLT.csv", header = TRUE, sep=",") %>%
as_tibble()
setwd("~/Desktop/Git/thesis-sample/Clean")
tmp <- read.csv("../Data/bridged_pop_county_asrhLT.csv", header = TRUE, sep=",") %>%  as_tibble()
glimpse(tmp)
pop_county <- tmp
rm(tmp)
pop_county
save(pop_county, file='../Data/bridged_pop_county_asrhLT.rdata')
rm(pop_county)
# using bridged_pop_county_asrhLT as it's more appropriate to build life tables with age groups 0,1,5,10
load('../Data/bridged_pop_county_asrhLT.rdata')
pop_county
pop_county %>% as.tibble() %>%
mutate(year=as.character(year),
fips=as.character(fips),
age_5yr_group=as.character(age_5yr_group),
fips=format_5digfips_v(fips)) %>% # apply 5 dig fips function to pop_county_race
rename(`sex`=`male`,
`race`=`hispanic_bridged`)
pop_county %>% as_tibble() %>%
mutate(year=as.character(year),
fips=as.character(fips),
age_5yr_group=as.character(age_5yr_group),
fips=format_5digfips_v(fips)) %>% # apply 5 dig fips function to pop_county_race
rename(`sex`=`male`,
`race`=`hispanic_bridged`)
#~~~~ (2) format fips ~~~~#
# create function that pads all fips (adds back leading zeroes)
format_5dig_fips <- function(fp) {
ifelse(str_length(fp)==4,
str_pad(fp, width=5, side="left", pad="0"),
fp)
}
format_5digfips_v <- Vectorize(format_5dig_fips)
pop_county %>% as_tibble() %>%
mutate(year=as.character(year),
fips=as.character(fips),
age_5yr_group=as.character(age_5yr_group),
fips=format_5digfips_v(fips)) %>% # apply 5 dig fips function to pop_county_race
rename(`sex`=`male`,
`race`=`hispanic_bridged`)
list.files(pattern="./Raw/mort[1|2]")
list.files(pattern="./Raw/*.rdata")
list.files(pattern = "./Raw/mort[1|2]", full.names = TRUE)
list.files(path='../Raw/', all.files=TRUE)
list.files(path='../Clean/', all.files=TRUE)
list.files(path='../Clean/Raw/', all.files=TRUE)
list.files(path='../Clean/Raw/', pattern="mort[1|2]" all.files=TRUE)
list.files(path='../Clean/Raw/', pattern="mort[1|2]", all.files=TRUE)
mort_file_list <- list.files(path='../Clean/Raw/', pattern="mort[1|2]", all.files=TRUE)
#~~~~ (1) get mortality .csv files ~~~~#
### Get mortality file names
mort_file_list1 <- list.files(pattern = "mort[1|2]", full.names = TRUE)
rm(mort_file_list1)
tibble(file = list.files(pattern = "mort[1|2]", full.names = TRUE)) %>%
mutate(year = str_sub(file,7,10) %>% parse_integer() ) %>%
arrange(year)
tibble(file = list.files(path='../Clean/Raw/', pattern="mort[1|2]", all.files=TRUE)) %>%
mutate(year = str_sub(file,7,10) %>% parse_integer() ) %>%
arrange(year)
list.files(pattern = "mort[1|2]", full.names = TRUE)
df_mort_files = tibble(file = list.files(path='../Clean/Raw/', pattern="mort[1|2]", all.files=TRUE)) %>%
mutate(year = str_sub(file,5,8) %>% parse_integer() ) %>%
arrange(year)
tibble(file = list.files(path='../Clean/Raw/', pattern="mort[1|2]", all.files=TRUE)) %>%
mutate(year = str_sub(file,5,8) %>% parse_integer() ) %>%
arrange(year)
df_mort_files = tibble(file = list.files(path='../Clean/Raw/', pattern="mort[1|2]", all.files=TRUE)) %>%
mutate(year = str_sub(file,5,8) %>% parse_integer() ) %>%
arrange(year)
file <- df_mort_files %>% filter(year==2000) %>% pull(file)
load(file)
file
load('file')
df_mort_files %>% filter(year==2000) %>% pull(file) %>% load()
#file <- df_mort_files %>% filter(year==2000) %>% pull(file)
load(file=file)
#file <- df_mort_files %>% filter(year==2000) %>% pull(file)
get(load(file=file))
View(df_mort_files)
load(file="../Clean/Raw/mort[1|2]")
file <- df_mort_files %>% filter(year==2000) %>% pull(file)
file
file.show(file)
file <- df_mort_files %>% filter(year==2000) %>% pull(file)
file
load(file=file)
